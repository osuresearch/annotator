{
  "version": 3,
  "sources": ["global-externals:react", "global-externals:@storybook/manager-api", "global-externals:@storybook/theming", "../../../.storybook/preset-rui/theme.light.js", "../../../.storybook/preset-rui/manager.js"],
  "sourcesContent": ["export default __REACT__;\nconst { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version } = __REACT__;\nexport { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version };", "export default __STORYBOOKAPI__;\nconst { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOKAPI__;\nexport { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState };", "export default __STORYBOOKTHEMING__;\nconst { CacheProvider, ClassNames, Global, ThemeProvider, background, color, convert, create, createCache, createGlobal, createReset, css, darken, ensure, ignoreSsrWarning, isPropValid, jsx, keyframes, lighten, styled, themes, typography, useTheme, withTheme } = __STORYBOOKTHEMING__;\nexport { CacheProvider, ClassNames, Global, ThemeProvider, background, color, convert, create, createCache, createGlobal, createReset, css, darken, ensure, ignoreSsrWarning, isPropValid, jsx, keyframes, lighten, styled, themes, typography, useTheme, withTheme };", "\nimport { create } from '@storybook/theming';\n\nexport default create({\n  base: 'light',\n\n  colorPrimary: '#26686d',\n\n  // Secondary drives link colors, input outlines, hover color for buttons,\n  // active underline colors,\n  colorSecondary: '#ba0c2f', // scarlet, or teal is good #26686d\n\n  // UI\n  appBg: '#ffffff', // f6f7f8 gray-tint-90\n  appContentBg: '#ffffff',\n  appBorderRadius: 0,\n\n  // Typography\n  fontBase: 'BuckeyeSans, HelveticaNeue, Helvetica, Arial, serif',\n  fontCode: 'monospace',\n\n  // Text colors\n  textColor: '#141517', // black\n  textInverseColor: 'rgba(255,255,255,0.9)',\n\n  // Toolbar default and active colors\n  barTextColor: '#212325',\n  barSelectedColor: '#ba0c2f', // scarlet\n  barBg: '#ffffff',\n\n  // Form colors\n  inputBg: '#ffffff',\n  inputBorder: '#eff1f2', // gray-tint-80\n  inputTextColor: '#141517', // black\n  inputBorderRadius: 0,\n\n  brandTitle: '@osuresearch/annotator',\n  brandUrl: 'https://github.com/osuresearch/annotator',\n  // brandImage: 'https://place-hold.it/350x150',\n});\n", "import React from 'react';\nimport { addons } from '@storybook/manager-api';\nimport theme from './theme.light';\n\n// export const ADDON_ID = 'storybook/source-loader';\n// export const PANEL_ID = `${ADDON_ID}/panel`;\n\n// addons.register(ADDON_ID, (api) => {\n//   addons.addPanel(PANEL_ID, {\n//     title: 'RUI',\n//     render: ({ active, key }) => (active ? <div key={key} api={api} /> : null),\n//     paramKey: 'rui',\n//   });\n// });\n\naddons.setConfig({\n  theme\n});\n"],
  "mappings": ";AAAA,IAAOA,EAAQ,UACT,CAAE,SAAAC,EAAU,UAAAC,EAAW,SAAAC,EAAU,SAAAC,EAAU,cAAAC,EAAe,WAAAC,EAAY,SAAAC,EAAU,mDAAAC,EAAoD,aAAAC,EAAc,cAAAC,EAAe,cAAAC,EAAe,cAAAC,EAAe,UAAAC,EAAW,WAAAC,EAAY,eAAAC,EAAgB,KAAAC,EAAM,KAAAC,EAAM,YAAAC,EAAa,WAAAC,EAAY,cAAAC,EAAe,UAAAC,EAAW,oBAAAC,EAAqB,gBAAAC,EAAiB,QAAAC,EAAS,WAAAC,EAAY,OAAAC,EAAQ,SAAAC,EAAU,QAAAC,CAAQ,EAAI,UCDpY,IAAOC,EAAQ,iBACT,CAAE,WAAAC,EAAY,SAAAC,EAAU,eAAAC,EAAgB,SAAAC,EAAU,OAAAC,EAAQ,kBAAAC,EAAmB,iBAAAC,EAAkB,oBAAAC,EAAqB,qBAAAC,EAAsB,gBAAAC,GAAiB,UAAAC,GAAW,gBAAAC,GAAiB,YAAAC,GAAa,MAAAC,GAAO,YAAAC,GAAa,kBAAAC,GAAmB,wBAAAC,GAAyB,sBAAAC,GAAuB,MAAAC,GAAO,cAAAC,GAAe,YAAAC,GAAa,QAAAC,GAAS,WAAAC,GAAY,eAAAC,GAAgB,WAAAC,GAAY,aAAAC,GAAc,eAAAC,GAAgB,iBAAAC,GAAkB,gBAAAC,GAAiB,kBAAAC,EAAkB,EAAI,iBCD5c,IAAOC,GAAQ,qBACT,CAAE,cAAAC,GAAe,WAAAC,GAAY,OAAAC,GAAQ,cAAAC,GAAe,WAAAC,GAAY,MAAAC,GAAO,QAAAC,GAAS,OAAAC,EAAQ,YAAAC,GAAa,aAAAC,GAAc,YAAAC,GAAa,IAAAC,GAAK,OAAAC,GAAQ,OAAAC,GAAQ,iBAAAC,GAAkB,YAAAC,GAAa,IAAAC,GAAK,UAAAC,GAAW,QAAAC,GAAS,OAAAC,GAAQ,OAAAC,GAAQ,WAAAC,GAAY,SAAAC,GAAU,UAAAC,EAAU,EAAI,qBCEvQ,IAAOC,EAAQC,EAAO,CACpB,KAAM,QAEN,aAAc,UAId,eAAgB,UAGhB,MAAO,UACP,aAAc,UACd,gBAAiB,EAGjB,SAAU,sDACV,SAAU,YAGV,UAAW,UACX,iBAAkB,wBAGlB,aAAc,UACd,iBAAkB,UAClB,MAAO,UAGP,QAAS,UACT,YAAa,UACb,eAAgB,UAChB,kBAAmB,EAEnB,WAAY,yBACZ,SAAU,0CAEZ,CAAC,ECxBDC,EAAO,UAAU,CACf,MAAAC,CACF,CAAC",
  "names": ["react_default", "Children", "Component", "Fragment", "Profiler", "PureComponent", "StrictMode", "Suspense", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "cloneElement", "createContext", "createElement", "createFactory", "createRef", "forwardRef", "isValidElement", "lazy", "memo", "useCallback", "useContext", "useDebugValue", "useEffect", "useImperativeHandle", "useLayoutEffect", "useMemo", "useReducer", "useRef", "useState", "version", "manager_api_default", "ActiveTabs", "Consumer", "ManagerContext", "Provider", "addons", "combineParameters", "controlOrMetaKey", "controlOrMetaSymbol", "eventMatchesShortcut", "eventToShortcut", "isMacLike", "isShortcutTaken", "keyToSymbol", "merge", "mockChannel", "optionOrAltSymbol", "shortcutMatchesShortcut", "shortcutToHumanString", "types", "useAddonState", "useArgTypes", "useArgs", "useChannel", "useGlobalTypes", "useGlobals", "useParameter", "useSharedState", "useStoryPrepared", "useStorybookApi", "useStorybookState", "theming_default", "CacheProvider", "ClassNames", "Global", "ThemeProvider", "background", "color", "convert", "create", "createCache", "createGlobal", "createReset", "css", "darken", "ensure", "ignoreSsrWarning", "isPropValid", "jsx", "keyframes", "lighten", "styled", "themes", "typography", "useTheme", "withTheme", "theme_light_default", "create", "addons", "theme_light_default"]
}
